<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="9600b6a8-8926-4610-a3b5-ec47358f5c2f" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/c/math/gcd.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/c/math/hoaresort.c" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/c/math/main.c" beforeDir="false" afterPath="$PROJECT_DIR$/math/c/main.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/CHANGELOG.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/.travis.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/CODE_OF_CONDUCT.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/CONTRIBUTING.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/CONTRIBUTORS.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/project.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/src/blockchain/blockchain.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/src/blockchain/endpoints.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/src/blockchain/routes.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/test/blockchain/test/blockchain.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/blockchain/test/blockchain/test/routes.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/doc/intro.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/math/math.clj" beforeDir="false" afterPath="$PROJECT_DIR$/math/clojure/math.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/project.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/src/threads/core.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/test/threads/core_test.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/.idea/ClojureProjectResolveSettings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/.idea/threads.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/.idea/workspace.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/main.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/clojure/threads_old/src/main.clj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/dotnet/fs/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/dotnet/fs/math/math.sln" beforeDir="false" afterPath="$PROJECT_DIR$/math/fsharp/math/math.sln" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dotnet/fs/math/src/App/App.fsproj" beforeDir="false" afterPath="$PROJECT_DIR$/math/fsharp/math/src/App/App.fsproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dotnet/fs/math/src/App/Program.fs" beforeDir="false" afterPath="$PROJECT_DIR$/math/fsharp/math/src/App/Program.fs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/.idea/elixir.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/.idea/workspace.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/.idea/workspace.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/bitcointest.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/config/config.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/lib/bitcointest.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/test/bitcointest_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/bitcointest/test/test_helper.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/.mix/compile.protocols" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.Collectable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.Enumerable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.IEx.Info.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.Inspect.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.List.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.String.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/ebin/Elixir.Elixirboilerplate.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/build/test/lib/elixirboilerplate/ebin/elixirboilerplate.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/dialyzer_manifest_21.2_elixir-1.7.4_test" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.Collectable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.Enumerable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.IEx.Info.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.Inspect.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.List.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/elixirboilerplate/consolidated/Elixir.String.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/elixirboilerplate/ebin/Elixir.Elixirboilerplate.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/config/config.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/elixirboilerplate.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/lib/elixirboilerplate.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/test/elixirboilerplate_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elixirboilerplate/test/test_helper.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/.babelrc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/css/app.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/css/phoenix.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/js/app.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/js/socket.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/static/favicon.ico" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/static/images/phoenix.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/static/robots.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/assets/webpack.config.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/config/config.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/config/dev.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/config/prod.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/config/test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/elm_articles.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles/application.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles/repo.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/channels/user_socket.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/controllers/page_controller.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/endpoint.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/gettext.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/router.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/templates/layout/app.html.eex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/templates/page/index.html.eex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/views/error_helpers.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/views/error_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/views/layout_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/lib/elm_articles_web/views/page_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/priv/gettext/en/LC_MESSAGES/errors.po" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/priv/gettext/errors.pot" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/priv/repo/migrations/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/priv/repo/seeds.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/test/elm_articles_web/controllers/page_controller_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/test/elm_articles_web/views/error_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/test/elm_articles_web/views/layout_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/test/elm_articles_web/views/page_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/test/support/channel_case.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/test/support/conn_case.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/test/support/data_case.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/elm_articles/test/test_helper.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/cowboy.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/cowlib.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/dialyze.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/earmark.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/ex_doc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/file_system.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/gettext.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/hackney.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/inch_ex.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/jason.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/kadabra.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/mime.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/phoenix.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/phoenix_html.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/phoenix_live_reload.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/phoenix_pubsub.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/plug.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/plug_cowboy.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/plug_crypto.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/ranch.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/libraries/websocket_client.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/.idea/workspace.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/.babelrc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/css/app.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/css/phoenix.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/js/app.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/js/socket.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/static/favicon.ico" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/static/images/phoenix.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/static/robots.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/assets/webpack.config.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/config/config.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/config/dev.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/config/prod.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/config/test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/fall.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall/application.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/channels/user_socket.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/controllers/fall_controller.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/controllers/page_controller.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/endpoint.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/gettext.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/router.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/templates/fall/faller.html.eex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/templates/fall/welcome.html.eex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/templates/layout/app.html.eex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/templates/page/index.html.eex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/views/error_helpers.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/views/error_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/views/fall_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/views/layout_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/lib/fall_web/views/page_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/mix.lock" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/priv/gettext/en/LC_MESSAGES/errors.po" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/priv/gettext/errors.pot" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/test/fall_web/controllers/page_controller_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/test/fall_web/views/error_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/test/fall_web/views/layout_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/test/fall_web/views/page_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/test/support/channel_case.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/test/support/conn_case.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/fall/test/test_helper.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/.mix/compile.protocols" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.Collectable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.Enumerable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.IEx.Info.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.Inspect.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.List.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.String.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/ebin/Elixir.FirstApp.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/build/test/lib/first_app/ebin/first_app.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/dialyzer_manifest_21.2.2_elixir-1.7.4_test" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.Collectable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.Enumerable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.IEx.Info.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.Inspect.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.List.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/first_app/consolidated/Elixir.String.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.elixir_ls/dialyzer_tmp/.elixir_ls/build/test/lib/first_app/ebin/Elixir.FirstApp.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/.idea/workspace.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/config/config.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/first_app.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/lib/first_app.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/test/first_app_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/first_app/test/test_helper.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/connection/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/connection/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/connection/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/connection/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/connection/ebin/Elixir.Connection.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/connection/ebin/connection.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/cowboy/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/cowboy/ebin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/cowboy/mix.rebar.config" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/cowlib/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/cowlib/ebin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/cowlib/include" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/cowlib/mix.rebar.config" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.App.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Backoff.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Connection.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.ConnectionError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.ConnectionPool.Pool.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.ConnectionPool.PoolSupervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.ConnectionPool.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.EncodeError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Holder.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.LogEntry.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Manager.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.Proxy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.ProxySupervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Ownership.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.OwnershipError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.PrepareStream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Task.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.TransactionError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.Watcher.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.DBConnection.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.Enumerable.DBConnection.PrepareStream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/Elixir.Enumerable.DBConnection.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/db_connection/ebin/db_connection.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/ebin/Elixir.Decimal.Context.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/ebin/Elixir.Decimal.Error.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/ebin/Elixir.Decimal.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/ebin/Elixir.Inspect.Decimal.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/ebin/Elixir.String.Chars.Decimal.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/decimal/ebin/decimal.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Queryable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Schema.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Storage.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.Transaction.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Adapter.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Application.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Association.BelongsTo.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Association.Has.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Association.HasThrough.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Association.ManyToMany.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Association.NotLoaded.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Association.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.CastError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.ChangeError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Changeset.Relation.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Changeset.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.ConstraintError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Embedded.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.InvalidChangesetError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.InvalidURLError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.LogEntry.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.MigrationError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Multi.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.MultiplePrimaryKeyError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.MultipleResultsError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyFieldError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.NoPrimaryKeyValueError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.NoResultsError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.API.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.BooleanExpr.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Combination.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Distinct.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Dynamic.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Filter.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.From.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.GroupBy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Join.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.LimitOffset.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Lock.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.OrderBy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Preload.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Select.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Update.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.Windows.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Builder.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.CastError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.CompileError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.DynamicExpr.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.FromExpr.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.JoinExpr.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Planner.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.QueryExpr.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.SelectExpr.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.Tagged.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.WindowAPI.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.QueryError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Atom.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.BitString.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Ecto.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Ecto.SubQuery.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.Tuple.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Queryable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Assoc.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Preloader.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Queryable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Registry.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Schema.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Supervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Repo.Transaction.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Repo.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Schema.Loader.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Schema.Metadata.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Schema.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.StaleEntryError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.SubQuery.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.SubQueryError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.Type.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.UUID.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Ecto.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Association.NotLoaded.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Changeset.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Query.DynamicExpr.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Inspect.Ecto.Schema.Metadata.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Jason.Encoder.Ecto.Association.NotLoaded.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Jason.Encoder.Ecto.Schema.Metadata.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Mix.Ecto.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Create.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Drop.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.Gen.Repo.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/Elixir.Mix.Tasks.Ecto.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto/ebin/ecto.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Collectable.Ecto.Adapters.SQL.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapter.Migration.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapter.Structure.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.MySQL.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.Postgres.Connection.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.Postgres.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.SQL.Application.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.SQL.Connection.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.SQL.Sandbox.Connection.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.SQL.Sandbox.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.SQL.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Adapters.SQL.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.Command.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.Constraint.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.Index.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.Reference.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.Runner.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.SchemaMigration.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.Supervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.Table.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migration.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Ecto.Migrator.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Enumerable.Ecto.Adapters.SQL.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Mix.EctoSQL.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Mix.Tasks.Ecto.Dump.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Mix.Tasks.Ecto.Gen.Migration.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Mix.Tasks.Ecto.Load.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Mix.Tasks.Ecto.Migrate.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Mix.Tasks.Ecto.Migrations.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Mix.Tasks.Ecto.Rollback.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/Elixir.Telemetry.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ecto_sql/ebin/ecto_sql.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/.mix/compile.erlang" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/.mix/compile.yecc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Application.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Backend.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Compiler.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Error.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Extractor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.ExtractorAgent.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Fuzzy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Interpolation.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Merger.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.MissingBindingsError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.PO.Parser.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.PO.PluralTranslation.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.PO.SyntaxError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.PO.Tokenizer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.PO.Translation.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.PO.Translations.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.PO.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Plural.UnknownLocaleError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.Plural.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Gettext.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Mix.Tasks.Compile.Gettext.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Mix.Tasks.Gettext.Extract.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/Elixir.Mix.Tasks.Gettext.Merge.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/gettext.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/gettext/ebin/gettext_po_parser.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/.compile_priv_gettext" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/.mix/compile.lock" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/.mix/compile.protocols" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Collectable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.DBConnection.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Ecto.Queryable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Enumerable.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.IEx.Info.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Inspect.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Jason.Encoder.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.List.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Phoenix.HTML.FormData.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Phoenix.HTML.Safe.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Phoenix.Param.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.Plug.Exception.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/consolidated/Elixir.String.Chars.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.Hello.Application.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.Hello.DataCase.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.Hello.Repo.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.Hello.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.ChannelCase.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.ConnCase.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.Endpoint.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.ErrorHelpers.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.ErrorView.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.Gettext.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.LayoutView.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.PageController.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.PageView.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.Router.Helpers.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.Router.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.UserSocket.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/Elixir.HelloWeb.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/ebin/hello.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/hello/priv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Codegen.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.DecodeError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Decoder.Unescape.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Decoder.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encode.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.EncodeError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Any.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Atom.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.BitString.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Date.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.DateTime.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Decimal.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Float.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Integer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Jason.Fragment.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.List.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Map.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.NaiveDateTime.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.Time.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Encoder.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Formatter.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Fragment.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.Helpers.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/Elixir.Jason.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/jason/ebin/jason.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/mime/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/mime/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/mime/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/mime/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/mime/ebin/Elixir.MIME.Application.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/mime/ebin/Elixir.MIME.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/mime/ebin/mime.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/mime/priv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Phoenix.Context.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Phoenix.Schema.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Phoenix.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Compile.Phoenix.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Digest.Clean.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Digest.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Cert.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Channel.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Context.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Embedded.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Html.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Json.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Presence.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Schema.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Gen.Secret.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Routes.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.Server.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Mix.Tasks.Phx.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.ActionClauseError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Channel.Server.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Channel.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.ChannelTest.NoopSerializer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.ChannelTest.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.CodeReloader.Proxy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.CodeReloader.Server.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.CodeReloader.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Config.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.ConnTest.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Controller.Pipeline.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Controller.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Digester.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.Cowboy2Adapter.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.Cowboy2Handler.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.CowboyAdapter.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.CowboyWebSocket.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.Instrument.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.RenderErrors.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.Supervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.Watcher.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Endpoint.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Logger.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.MissingParamError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Naming.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.NotAcceptableError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Param.Any.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Param.Atom.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Param.BitString.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Param.Integer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Param.Map.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Param.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Presence.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Router.ConsoleFormatter.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Router.Helpers.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Router.NoRouteError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Router.Resource.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Router.Route.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Router.Scope.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Router.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.Broadcast.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.InvalidMessageError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.Message.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.PoolSupervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.Reply.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.Serializer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.Transport.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.V1.JSONSerializer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.V2.JSONSerializer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Socket.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Template.EExEngine.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Template.Engine.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Template.ExsEngine.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Template.HTML.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Template.UndefinedError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Template.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Token.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Transports.LongPoll.Server.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Transports.LongPoll.Supervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Transports.LongPoll.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.Transports.WebSocket.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.View.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Phoenix.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/Elixir.Plug.Exception.Phoenix.ActionClauseError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/ebin/phoenix.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix/priv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Phoenix.Ecto.SQL.Sandbox.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Phoenix.Ecto.SQL.SandboxSession.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Phoenix.Ecto.SQL.SandboxSupervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Phoenix.Ecto.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Phoenix.HTML.FormData.Ecto.Changeset.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Phoenix.HTML.Safe.Decimal.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Plug.Exception.Ecto.CastError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Plug.Exception.Ecto.InvalidChangesetError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Plug.Exception.Ecto.NoResultsError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Plug.Exception.Ecto.Query.CastError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Plug.Exception.Ecto.StaleEntryError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/Elixir.Plug.Exception.Ecto.SubQueryError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_ecto/ebin/phoenix_ecto.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Engine.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Form.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.FormData.Plug.Conn.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.FormData.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Format.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Link.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.Atom.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.BitString.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.Date.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.DateTime.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.Float.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.Integer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.List.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.NaiveDateTime.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.Time.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.Tuple.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Safe.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.Tag.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/Elixir.Phoenix.HTML.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/ebin/phoenix_html.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_html/priv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.PubSub.BroadcastError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.PubSub.GC.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.PubSub.Local.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.PubSub.LocalSupervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.PubSub.PG2.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.PubSub.PG2Server.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.PubSub.Supervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.PubSub.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.Tracker.Clock.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.Tracker.DeltaGeneration.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.Tracker.Replica.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.Tracker.Shard.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.Tracker.State.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/Elixir.Phoenix.Tracker.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/phoenix_pubsub/ebin/phoenix_pubsub.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/.mix/compile.erlang" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Collectable.Plug.Conn.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Inspect.Plug.Conn.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Adapters.Cowboy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Adapters.Cowboy2.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Adapters.Test.Conn.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.BadRequestError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Builder.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.CSRFProtection.InvalidCSRFTokenError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.CSRFProtection.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.Adapter.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.AlreadySentError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.CookieOverflowError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.Cookies.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.InvalidHeaderError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.InvalidQueryError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.NotSentError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.Status.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.Unfetched.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.Utils.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.WrapperError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Conn.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Debugger.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.ErrorHandler.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Exception.Any.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Exception.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.HTML.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Head.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Logger.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.MIME.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.MethodOverride.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Parsers.BadEncodingError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Parsers.JSON.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Parsers.MULTIPART.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Parsers.ParseError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Parsers.RequestTooLargeError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Parsers.URLENCODED.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Parsers.UnsupportedMediaTypeError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Parsers.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.RequestId.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Router.InvalidSpecError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Router.Utils.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Router.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.SSL.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Session.COOKIE.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Session.ETS.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Session.Store.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Session.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Static.InvalidPathError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Static.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Supervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Test.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.TimeoutError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.Upload.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.UploadError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/Elixir.Plug.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/plug.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug/ebin/plug_multipart.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/ebin/Elixir.Plug.Cowboy.Conn.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/ebin/Elixir.Plug.Cowboy.Handler.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/ebin/Elixir.Plug.Cowboy.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/ebin/Elixir.Plug.Cowboy.Translator.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/ebin/Elixir.Plug.Cowboy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_cowboy/ebin/plug_cowboy.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/ebin/Elixir.Plug.Crypto.KeyGenerator.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/ebin/Elixir.Plug.Crypto.MessageEncryptor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/ebin/Elixir.Plug.Crypto.MessageVerifier.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/ebin/Elixir.Plug.Crypto.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/plug_crypto/ebin/plug_crypto.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/.mix/compile.elixir" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/.mix/compile.elixir_scm" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/.mix/compile.xref" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Collectable.Postgrex.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.DBConnection.Query.Postgrex.Copy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.DBConnection.Query.Postgrex.Parameters.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.DBConnection.Query.Postgrex.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Enumerable.Postgrex.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.App.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.BinaryExtension.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.BinaryUtils.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Box.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Circle.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Copy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Cursor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.DefaultTypes.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Error.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.ErrorCode.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extension.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Array.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.BitString.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Bool.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Box.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Circle.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Date.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Float4.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Float8.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.HStore.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.INET.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int2.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int4.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Int8.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Interval.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.JSON.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.JSONB.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Line.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.LineSegment.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.MACADDR.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Name.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Numeric.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.OID.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Path.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Point.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Polygon.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Range.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Raw.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Record.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.TID.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.TSVector.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Time.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.TimeTZ.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.Timestamp.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.TimestampTZ.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.UUID.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.VoidBinary.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Extensions.VoidText.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.INET.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Interval.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Lexeme.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Line.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.LineSegment.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.MACADDR.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Messages.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Notifications.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Parameters.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Path.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Point.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Polygon.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Protocol.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.QueryError.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Range.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Result.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.SCRAM.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Stream.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.SuperExtension.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.TypeInfo.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.TypeModule.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.TypeServer.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.TypeSupervisor.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Types.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.Utils.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.Postgrex.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.String.Chars.Postgrex.Copy.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/Elixir.String.Chars.Postgrex.Query.beam" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/postgrex/ebin/postgrex.app" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ranch/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ranch/ebin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/ranch/mix.rebar.config" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/telemetry/.mix/compile.fetch" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/telemetry/ebin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.elixir_ls/build/test/lib/telemetry/mix.rebar.config" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/benchee.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/benchee_json.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/connection.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/cowboy.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/cowlib.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/db_connection.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/decimal.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/dialyxir.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/dialyze.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/earmark.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/ecto.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/ecto_sql.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/erlang_pmp.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/ex_doc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/file_system.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/gettext.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/hackney.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/inch_ex.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/jason.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/kadabra.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/mariaex.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/mime.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/phoenix.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/phoenix_ecto.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/phoenix_html.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/phoenix_live_reload.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/phoenix_pubsub.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/plug.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/plug_cowboy.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/plug_crypto.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/poison.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/postgrex.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/ranch.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/telemetry.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/libraries/websocket_client.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/.idea/workspace.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/.babelrc" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/css/app.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/css/phoenix.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/js/app.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/js/socket.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/static/favicon.ico" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/static/images/phoenix.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/static/robots.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/assets/webpack.config.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/config/config.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/config/dev.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/config/prod.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/config/test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/hello.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello/application.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello/repo.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/channels/user_socket.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/controllers/page_controller.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/endpoint.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/gettext.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/router.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/templates/layout/app.html.eex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/templates/page/index.html.eex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/views/error_helpers.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/views/error_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/views/layout_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/lib/hello_web/views/page_view.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/mix.lock" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/node_modules/elm-brunch/.travis.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/node_modules/elm-brunch/CHANGELOG.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/node_modules/elm-brunch/ISSUE_TEMPLATE.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/node_modules/elm-brunch/LICENSE" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/node_modules/elm-brunch/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/node_modules/elm-brunch/index.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/node_modules/elm-brunch/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/node_modules/elm-brunch/test/index_spec.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/priv/gettext/en/LC_MESSAGES/errors.po" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/priv/gettext/errors.pot" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/priv/repo/migrations/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/priv/repo/seeds.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/test/hello_web/controllers/page_controller_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/test/hello_web/views/error_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/test/hello_web/views/layout_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/test/hello_web/views/page_view_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/test/support/channel_case.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/test/support/conn_case.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/test/support/data_case.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/hello/test/test_helper.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/math-func/math-func.ex" beforeDir="false" afterPath="$PROJECT_DIR$/math/elixir/math-func.ex" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/math-func/math-func.exs" beforeDir="false" afterPath="$PROJECT_DIR$/math/elixir/math-func.exs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/.idea/workspace.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/config/config.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/lib/drop_app.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/lib/drop_server.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/lib/drop_sup.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/lib/otp.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/otp.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/test/otp_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/otp/test/test_helper.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/Mnesia.nonode@nohost/LATEST.LOG" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/Mnesia.nonode@nohost/schema.DAT" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/config/config.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/drop.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/ask.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/bounce.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/combined.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/convert.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/count.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/drop.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/drop_server.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/drop_sup.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/fact.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/hof.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/list_drop.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/mph_drop.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/new_type.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/overall.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/pascal.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/planemo_old.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/planemo_storage.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/record_drop.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/records.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/specs.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/struct_drop.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/tower_old.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/lib/valid.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/test/drop2_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/test/drop4_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/test/drop_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/elixir/study/test/test_helper.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/go/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/lisp/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mercury/README.md" beforeDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/out/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DepsLocalSettings">
    <option name="modificationStamps">
      <map>
        <entry key="$PROJECT_DIR$" value="1546030295000" />
        <entry key="$PROJECT_DIR$/deps.edn" value="3421213242" />
      </map>
    </option>
    <option name="projectSyncType">
      <map>
        <entry key="$PROJECT_DIR$" value="RE_IMPORT" />
      </map>
    </option>
  </component>
  <component name="ElmWorkspace">
    <elmProjects />
    <settings binDirPath="" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/c/stdin-stdout-cpp/inout.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-60">
              <caret line="10" column="1" lean-forward="true" selection-start-line="10" selection-start-column="1" selection-end-line="10" selection-end-column="1" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/math/c/main.c">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="135">
              <caret line="36" lean-forward="true" selection-start-line="36" selection-end-line="36" />
              <folding>
                <element signature="e#0#528#0" />
                <element signature="e#0#300#0" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/math/clojure/math.clj">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/math/elixir/math-func.exs">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/math/elixir/math-func.ex">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="105">
              <caret line="7" lean-forward="true" selection-start-line="7" selection-end-line="7" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/erlang/math/math.erl">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/erlang/README.md">
          <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
            <state split_layout="SPLIT">
              <first_editor relative-caret-position="45">
                <caret line="3" column="8" selection-end-line="3" selection-end-column="85" />
              </first_editor>
              <second_editor />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/README.md">
          <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
            <state split_layout="SPLIT">
              <first_editor relative-caret-position="225">
                <caret line="15" column="59" selection-start-line="15" selection-start-column="59" selection-end-line="15" selection-end-column="59" />
              </first_editor>
              <second_editor />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/math/fsharp/math/src/App/Program.fs">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/math/fsharp/math/math.sln">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/elm/README.md" />
        <option value="$PROJECT_DIR$/haskell/README.md" />
        <option value="$PROJECT_DIR$/kotlin/README.md" />
        <option value="$PROJECT_DIR$/hello_world/lisp/hello.lisp" />
        <option value="$PROJECT_DIR$/dotnet/cs/README.md" />
        <option value="$PROJECT_DIR$/mercury/README.md" />
        <option value="$PROJECT_DIR$/math/c/gcd.c" />
        <option value="$PROJECT_DIR$/math/c/main.c" />
        <option value="$PROJECT_DIR$/dotnet/fs/README.md" />
        <option value="$PROJECT_DIR$/elixir/README.md" />
        <option value="$PROJECT_DIR$/README.md" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="1972" />
    <option name="y" value="278" />
    <option name="width" value="1857" />
    <option name="height" value="1019" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="thread" type="b2602c69:ProjectViewProjectNode" />
              <item name="forge_edu" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="thread" type="b2602c69:ProjectViewProjectNode" />
              <item name="forge_edu" type="462c0819:PsiDirectoryNode" />
              <item name="erlang" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="thread" type="b2602c69:ProjectViewProjectNode" />
              <item name="forge_edu" type="462c0819:PsiDirectoryNode" />
              <item name="erlang" type="462c0819:PsiDirectoryNode" />
              <item name="math" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="thread" type="b2602c69:ProjectViewProjectNode" />
              <item name="forge_edu" type="462c0819:PsiDirectoryNode" />
              <item name="math" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1550486545771" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="org.rust.cargo.project.model.PROJECT_DISCOVERY" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/math/elixir" />
      <recent name="$PROJECT_DIR$/math/fsharp" />
      <recent name="$PROJECT_DIR$/math/clojure" />
      <recent name="$PROJECT_DIR$/math/c" />
      <recent name="$PROJECT_DIR$/gcd/c" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9600b6a8-8926-4610-a3b5-ec47358f5c2f" name="Default Changelist" comment="" />
      <created>1546030292680</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1546030292680</updated>
      <workItem from="1546030296176" duration="85000" />
      <workItem from="1550484514353" duration="1881000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="1966000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="1977" y="-4" width="1863" height="1084" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Image Layers" />
      <window_info id="Capture Tool" />
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.2526142" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Designer" order="2" />
      <window_info id="UI Designer" order="3" />
      <window_info id="Favorites" order="4" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Docker" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Database Changes" order="8" />
      <window_info anchor="bottom" id="Terminal" order="9" visible="true" weight="0.3646813" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="11" />
      <window_info anchor="bottom" id="Build" order="12" weight="0.32937366" />
      <window_info anchor="right" id="Maven" />
      <window_info anchor="right" id="Theme Preview" />
      <window_info anchor="right" id="Elm" />
      <window_info anchor="right" id="Capture Analysis" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Database" order="4" />
      <window_info anchor="right" id="Cargo" order="5" />
      <window_info anchor="right" id="REPL" order="6" side_tool="true" />
      <window_info anchor="right" id="Leiningen" order="7" />
      <window_info anchor="right" id="Palette&#9;" order="8" />
      <window_info anchor="right" id="Clojure Deps" order="9" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/elm/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/haskell/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/hello_world/haskell/hello.hs">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/kotlin/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/hello_world/lisp/hello.lisp">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="20" selection-start-column="20" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/sml/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/deps.edn">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/Labs.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dotnet/cs/math/math_func.csproj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/dotnet/cs/math/Program.cs">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/dotnet/cs/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/tasks.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="FIRST">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/go/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/haskell/triads.hs">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/kotlin/math/math.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="165">
          <caret line="11" lean-forward="true" selection-start-line="11" selection-end-line="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/lisp/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/lisp/printrnd.lisp">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/mercury/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/prolog/math/math.pl">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/prolog/rebuses/rebus1.pl">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure/blockchain/src/blockchain/blockchain.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure/doc/intro.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/math/c/gcd.c">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="3" selection-start-column="3" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/math/c/hoaresort.c">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/c/stdin-stdout-cpp/inout.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-60">
          <caret line="10" column="1" lean-forward="true" selection-start-line="10" selection-start-column="1" selection-end-line="10" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/math/c/main.c">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="135">
          <caret line="36" lean-forward="true" selection-start-line="36" selection-end-line="36" />
          <folding>
            <element signature="e#0#528#0" />
            <element signature="e#0#300#0" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure/src/threads/core.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure/test/threads/core_test.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure/threads_old/src/main.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure/threads.iml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure/project.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/clojure/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/math/fsharp/math/src/App/Program.fs">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/math/fsharp/math/math.sln">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/dotnet/fs/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/math/clojure/math.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/elixir/bitcointest/lib/bitcointest.ex">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="360">
          <caret line="24" lean-forward="true" selection-start-line="24" selection-end-line="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/math/elixir/math-func.exs">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/elixir/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/math/elixir/math-func.ex">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="105">
          <caret line="7" lean-forward="true" selection-start-line="7" selection-end-line="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/erlang/math/math.erl">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/erlang/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="45">
            <caret line="3" column="8" selection-end-line="3" selection-end-column="85" />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="225">
            <caret line="15" column="59" selection-start-line="15" selection-start-column="59" selection-end-line="15" selection-end-column="59" />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
  </component>
</project>